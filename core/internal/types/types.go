// Code generated by goctl. DO NOT EDIT.
package types

type EmailCodeRequest struct {
	Email string `json:"email"`
}

type EmailCodeResponse struct {
}

type FileDeleteRequest struct {
	Identity string `json:"identity"`
}

type FileDeleteResponse struct {
}

type FileRenameRequest struct {
	Identity string `json:"identity"`
	NewName  string `json:"newName"`
}

type FileRenameResponse struct {
}

type FileUploadRequest struct {
	Hash string `json:"hash,optional"`
	Name string `json:"name,optional"`
	Ext  string `json:"ext,optional"`
	Size int64  `json:"size,optional"`
	Path string `json:"path,optional"`
}

type FileUploadResponse struct {
	Identity string `json:"identity"`
	Ext      string `json:"ext"`
	Name     string `json:"name"`
}

type FolderCreateRequest struct {
	ParentId int    `json:"parentId"`
	Name     string `json:"name"`
}

type FolderCreateResponse struct {
	Identity string `json:"identity"`
}

type InfoRequest struct {
	Identity string `json:"identity"`
}

type InfoResponse struct {
	UserName string `json:"username"`
	Email    string `json:email`
}

type LoginRequest struct {
	UserName string `json:"username"`
	Password string `json:"password"`
}

type LoginResponse struct {
	Token string `json:"token"`
}

type MoveFileRequest struct {
	Identity       string `json:"identity"`
	ParentIdentity string `json:"parentIdentity"`
}

type MoveFileResponse struct {
}

type UserFile struct {
	Id                 int    `json:"id"`
	Identity           string `json:"identity"`
	RepositoryIdentity string `json:"repositoryIdentity"`
	Name               string `json:"name"`
	Ext                string `json:"ext"`
	Path               string `json:"path"`
	Size               int64  `json:"size"`
}

type UserRegisterRequest struct {
	UserName string `json:"username"`
	Email    string `json:"email"`
	Password string `json:"password"`
	Code     string `json:"code"`
}

type UserRegisterResponse struct {
}

type UserRepositoryListRequest struct {
	Id   int `json:"id,optional"`
	Page int `json:"page,optional"`
	Size int `json:"size,optional"`
}

type UserRepositoryListResponse struct {
	List  []*UserFile `json:"list"`
	Count int         `json:"count"`
}

type UserRepositoryRequest struct {
	ParentId           int    `json:"parentId"`
	RepositoryIdentity string `json:"repositoryIdentity"`
	Ext                string `json:"ext"`
	Name               string `json:"name"`
}

type UserRepositoryResponse struct {
	Identity string `json:"identity"`
}
